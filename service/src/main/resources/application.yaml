logging:
  file:
    path: logs
    name: ${logging.file.path}/mod-workflow.log
  level:
    com:
      zaxxer:
        hikari: INFO
    org:
      folio: INFO
      hibernate: INFO
      springframework: INFO

# https://docs.spring.io/spring-boot/docs/current/reference/html/actuator.html
management:
  endpoints:
    enabled-by-default: false
    web:
      base-path: /actuator
      exposure:
        include: flyway,health,info
  endpoint:
    flyway:
      enabled: true
    health:
      enabled: true
      show-details: always
      show-components: always
    info:
      enabled: true
  info:
    env.enabled: true
    java.enabled: true
    os.enabled: true

server:
  port: 9000
  servlet:
    context-path: /mod-workflow
    encoding:
      charset: UTF-8
      enabled: true

spring:
  activemq.broker-url: tcp://localhost:61616
  application.name: mod-workflow
  data.rest:
    returnBodyOnCreate: true
    returnBodyOnUpdate: true

  main:
    allow-bean-definition-overriding: false
    allow-circular-references: false
    banner-mode: console
    log-startup-info: true

  sql:
    init:
      platform: h2
      # platform: postgres

  datasource:
    hikari:
      leakDetectionThreshold: 180000
      connectionTimeout: 30000
      idleTimeout: 600000
      maxLifetime: 1800000
      maximumPoolSize: 16
    driverClassName: org.h2.Driver
    url: jdbc:h2:./target/mod-workflow;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    # driverClassName: org.postgresql.Driver
    # url: jdbc:postgresql://localhost:5432/mod_workflow

    username: folio_admin
    password: folio_admin

  flyway:
    enabled: true
    encoding: UTF-8

  h2:
    console:
      enabled: true
      path: /h2console
      settings:
        web-allow-others: true

  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    # database-platform: org.hibernate.dialect.PostgreSQLDialect

    properties.hibernate.jdbc.lob.non_contextual_creation: true
    generate-ddl: false
    hibernate.ddl-auto: none
    open-in-view: true
    show-sql: false

  profiles:
    active: default, messaging

  thymeleaf:
    mode: TEXT
    suffix: .sql

springdoc:
  api-docs:
    enabled: true
    path: /api-docs
  show-actuator: true
  swagger-ui:
    enabled: true
    path: /swagger-ui
  writer-with-default-pretty-printer: true

event:
  uploads:
    path: events
  queue:
    name: event.queue

tenant:
  header-name: X-Okapi-Tenant
  force-tenant: false
  default-tenant: diku
  initialize-default-tenant: true
  domain-packages:
    - org.folio.rest.workflow.components
    - org.folio.rest.workflow.model
  schema-scripts:

okapi:
  url: http://localhost:9000
  camunda:
    base-path: /mod-camunda
    rest-path: /mod-camunda/rest

info:
  build:
    artifact: "@project.artifactId@"
    name: "@project.name@"
    description: "@project.description@"
    version: "@project.version@"
